import { Telegraf } from "telegraf";
import { getUserByTgName } from "../services/userService";
import { getArticleFromChatGPT } from "../services/chatgptApi";
import { createOrder } from "../services/orderService";
import logger from "../logger";

export function setupCreateOrderCommand(bot: Telegraf) {
    const orderCreationState = new Map<number, { userId: number; description?: string; retries: number }>();

    bot.command("create_order", async (ctx) => {
        const tgName = ctx.from.username || ctx.from.first_name;
        const user = await getUserByTgName(tgName);

        if (!user) {
            return ctx.reply("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.");
        }

        orderCreationState.set(ctx.from.id, { userId: user.id, retries: 0 });
        ctx.reply("üìù –û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å:");
    });

    bot.on("text", async (ctx) => {
        const state = orderCreationState.get(ctx.from.id);
        if (!state) return;

        if (!state.description) {
            state.description = ctx.message.text;
            ctx.reply("üîç –û–ø—Ä–µ–¥–µ–ª—è—é –∞—Ä—Ç–∏–∫—É–ª –¥–µ—Ç–∞–ª–∏...");

            const article = await getArticleFromChatGPT(state.description);
            if (!article) {
                state.retries++;

                if (state.retries >= 2) {
                    ctx.reply("‚ùå –ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞—Ä—Ç–∏–∫—É–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –¥–µ—Ç–∞–ª—å –ø–æ-–¥—Ä—É–≥–æ–º—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.");
                    orderCreationState.delete(ctx.from.id);
                    return;
                }

                ctx.reply("‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞—Ä—Ç–∏–∫—É–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –¥–µ—Ç–∞–ª—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–∫–∞–∂–∏—Ç–µ –º–∞—Ä–∫—É, –º–æ–¥–µ–ª—å, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞).");
                return;
            }

            const orderId = await createOrder(article, state.userId);
            if (!orderId) {
                ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.");
                orderCreationState.delete(ctx.from.id);
                return;
            }

            ctx.reply(`‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω!\nüÜî ID: ${orderId}\nüîß –ê—Ä—Ç–∏–∫—É–ª: ${article}`);
            orderCreationState.delete(ctx.from.id);
            logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.username} —Å–æ–∑–¥–∞–ª –∑–∞–∫–∞–∑ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${article}`);
        }
    });
}
